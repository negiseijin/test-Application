name: Release

on:
    workflow_call:
        inputs:
            tag:
                required: true
                type: string
            pr:
                required: true
                type: string
        secrets:
            token:
                required: true
    workflow_dispatch:
      inputs:
        tag:
          required: true
          type: string

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        timeout-minutes: 20
        permissions:
            contents: write
            pull-requests: write

        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"
                  cache: gradle

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            # - name: Lint
            #   run: ./gradlew ktlintCheck
            # - name: Test
            #   run: ./gradlew test
            - name: Build with Gradle
              run: ./gradlew assembleDebug
            # - name: Upload artifact
            #   uses: actions/upload-artifact@v4
            #   id: artifact-upload-step
            #   with:
            #     name: artifact-${{ inputs.tag }}
            #     path: ${{ github.workspace }}/app/build/outputs/apk/debug
            - name: Create artifact to release
              id: create-artifact-to-release
              run: |
                   tar -czf artifact-${{ inputs.tag }}.tar.gz -C \
                   ${{ github.workspace }}/app/build/outputs/apk/debug .
            - name: Create release
              id: create-release
              run: |
                release=$(gh release create ${{ inputs.tag }} ${{ github.workspace }}/artifact-${{ inputs.tag }}.tar.gz --generate-notes)
                echo "release=$release" >> "$GITHUB_OUTPUT"
            - name: Update pr
              id: update-pr
              run: |
                body=$(gh pr view ${{ inputs.pr }} --json "body" --jq ".[]")
                pr=$(gh pr edit ${{ inputs.pr }} \
                --body "# âœ¨ releases: [${{ inputs.tag }}](${{ steps.create-release.outputs.release }})$body")
                echo "pr=$pr" >> "$GITHUB_OUTPUT"
            - name: Disp step summary
              if: ${{ always() }}
              run: |
                echo "## JOBS_SUMMARY "${{ job.status == 'success' && ':tada:' || ':x:' }}"" >> $GITHUB_STEP_SUMMARY
                echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
                echo "| Step | Outcome | Remarks |" >> $GITHUB_STEP_SUMMARY
                echo "|------|---------|---------|" >> $GITHUB_STEP_SUMMARY
                # echo "|Upload artifact|\`${{ steps.artifact-upload-step.outcome }}\`| |" >> $GITHUB_STEP_SUMMARY
                echo "|Create artifact to release|\`${{ steps.create-artifact-to-release.outcome }}\`| |" >> $GITHUB_STEP_SUMMARY
                echo "|Create Release|\`${{ steps.create-release.outcome }}\`| ${{ steps.create-release.outputs.release }} |" >> $GITHUB_STEP_SUMMARY
                echo "|Update pr|\`${{ steps.update-pr.outcome }}\`| ${{ steps.update-pr.outputs.pr }} |" >> $GITHUB_STEP_SUMMARY
