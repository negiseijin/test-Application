name: Release

on:
    workflow_call:
        inputs:
            tag:
                required: true
                type: string
        secrets:
            token:
                required: true
    workflow_dispatch:
      inputs:
        tag:
          required: true
          type: string
          default: "v-1.0.0-1"

jobs:
    release:
        name: Release
        runs-on: ubuntu-latest
        timeout-minutes: 20
        permissions:
            contents: write
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        steps:
            - uses: actions/checkout@v4
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: "17"
                  distribution: "temurin"
                  cache: gradle

            - name: Grant execute permission for gradlew
              run: chmod +x gradlew
            - uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-
            # - name: Lint
            #   run: ./gradlew ktlintCheck
            # - name: Test
            #   run: ./gradlew test
            - name: Build with Gradle
              run: ./gradlew assembleDebug
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              id: artifact-upload-step
              with:
                name: artifact-${{ inputs.tag }}
                path: ${{ github.workspace }}/app/build/outputs/apk/debug
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: artifact-${{ inputs.tag }}
                  path: ${{ github.workspace }}/artifacts
            - name: Create artifact to release
              shell: bash
              run: |
                 zip -r artifact-${{ inputs.tag }}.zip \
                 ${{ github.workspace }}/artifacts
            - name: Display structure of downloaded files
              run: ls -R ${{ github.workspace }}/artifacts
            - name: Create release
              run: gh release create ${{ inputs.tag }} ${{ github.workspace }}/artifact-${{ inputs.tag }}.zip --generate-notes
            # - name: Upload artifact to release
            #   shell: bash
            #   run: |
            #    zip -r artifact-${{ inputs.tag }}.zip \
            #     ${{ github.workspace }}/app/build/outputs/apk/debug/app-debug.apk \
            #     ${{ github.workspace }}/app/build/outputs/apk/debug/output-metadata.json
            #    gh release upload ${{ inputs.tag }} ${{ github.workspace }}/artifact-${{ inputs.tag }}.zip
